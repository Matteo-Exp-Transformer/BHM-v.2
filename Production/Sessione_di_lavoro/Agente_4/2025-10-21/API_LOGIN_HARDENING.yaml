openapi: 3.0.0
info:
  title: BHM Login Hardening API
  version: 1.0.0
  description: API per login hardening con CSRF protection e rate limiting
  contact:
    name: BHM Development Team

servers:
  - url: https://tucqgcfrlzmwyfadiodo.supabase.co/functions/v1
    description: Supabase Edge Functions
    variables:
      project:
        default: tucqgcfrlzmwyfadiodo

paths:
  /auth/csrf-token:
    get:
      summary: Ottieni token CSRF
      operationId: getCsrfToken
      tags: [Authentication]
      responses:
        '200':
          description: Token CSRF generato
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string
                    format: uuid
                    description: Token CSRF per protezione
                  expires_at:
                    type: string
                    format: date-time
                    description: Scadenza token
          headers:
            Set-Cookie:
              description: Cookie HttpOnly con token CSRF
              schema:
                type: string
                example: "bhm_csrf_token=abc123; HttpOnly; Secure; SameSite=Strict; Max-Age=14400"
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /auth/csrf-token/refresh:
    post:
      summary: Refresh token CSRF
      operationId: refreshCsrfToken
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_token:
                  type: string
                  format: uuid
                  description: Token CSRF corrente
      responses:
        '200':
          description: Token CSRF aggiornato
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string
                    format: uuid
                  expires_at:
                    type: string
                    format: date-time
        '403':
          $ref: '#/components/responses/CsrfInvalid'
        '429':
          $ref: '#/components/responses/RateLimited'

  /auth/login:
    post:
      summary: Login utente con rate limiting
      operationId: loginUser
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
          headers:
            X-RateLimit-Remaining:
              description: Tentativi rimanenti
              schema:
                type: integer
                example: 4
            X-RateLimit-Reset:
              description: Timestamp reset rate limit
              schema:
                type: integer
                example: 1640995200
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CsrfInvalid'
        '429':
          $ref: '#/components/responses/RateLimited'
        '423':
          description: Account locked
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Account temporaneamente bloccato"
                  locked_until:
                    type: string
                    format: date-time
                    example: "2025-10-21T15:30:00Z"

  /auth/logout:
    post:
      summary: Logout utente
      operationId: logoutUser
      tags: [Authentication]
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CsrfInvalid'

  /auth/recovery/request:
    post:
      summary: Richiedi reset password
      operationId: requestPasswordRecovery
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
                  description: Email utente
      responses:
        '200':
          description: Email inviata
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Email inviata"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimited'

  /auth/recovery/confirm:
    post:
      summary: Conferma reset password
      operationId: confirmPasswordRecovery
      tags: [Authentication]
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            format: uuid
            description: Token di reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [password]
              properties:
                password:
                  type: string
                  minLength: 12
                  description: Nuova password
      responses:
        '200':
          description: Password resettata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/CsrfInvalid'

components:
  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          description: Email utente
        password:
          type: string
          minLength: 12
          description: Password utente
        rememberMe:
          type: boolean
          default: false
          description: Ricorda sessione

    SessionData:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              format: uuid
            email:
              type: string
              format: email
            profile:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
        session:
          type: object
          properties:
            token:
              type: string
            expires_at:
              type: string
              format: date-time
            csrf_token:
              type: string
              format: uuid
        roles:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              permissions:
                type: array
                items:
                  type: string
        tenant:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            slug:
              type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid input"
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: string

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid credentials"
              code:
                type: string
                example: "AUTH_FAILED"

    CsrfInvalid:
      description: CSRF token invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "CSRF token invalid"
              code:
                type: string
                example: "CSRF_REQUIRED"

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Rate limit exceeded"
              code:
                type: string
                example: "RATE_LIMITED"
              retry_after:
                type: integer
                description: Secondi prima del retry
                example: 300
          headers:
            X-RateLimit-Remaining:
              description: Tentativi rimanenti
              schema:
                type: integer
                example: 0
            X-RateLimit-Reset:
              description: Timestamp reset
              schema:
                type: integer
                example: 1640995200
            Retry-After:
              description: Secondi prima del retry
              schema:
                type: integer
                example: 300

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token
    CsrfToken:
      type: apiKey
      in: header
      name: X-CSRF-Token
      description: CSRF protection token

security:
  - CsrfToken: []
  - BearerAuth: []
